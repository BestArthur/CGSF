#ifndef INETWORKENGINE_H_
#define INETWORKENGINE_H_

#ifdef NETWORKENGINE_EXPORTS
#define NETWORKENGINEDECL __declspec(dllexport)
#else
#define NETWORKENGINEDECL __declspec(dllimport)
#endif

class INetworkEngineCallback;

class NETWORKENGINEDECL INetworkEngine
{
  public:  
	INetworkEngine(INetworkEngineCallback* pCallback)
	{
		m_Callback = pCallback;
	}

    virtual ~INetworkEngine() {};

	virtual bool Init() = 0;

	virtual bool Start(char* szIP, unsigned short Port) = 0;

////////////////////////////////////////////////////////////////////////////////////////////////////
//엔진 종료
////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual bool Shutdown() = 0;

////////////////////////////////////////////////////////////////////////////////////////////////////
//Desc : 데이터 전송
//패킷전송을 위한 구성은 마친 상태
////////////////////////////////////////////////////////////////////////////////////////////////////
	virtual bool Send(int Serial, char* pData, unsigned short Length) = 0;

////////////////////////////////////////////////////////////////////////////////////////////////////
//강제로 세션을 종료하고 싶을 때
////////////////////////////////////////////////////////////////////////////////////////////////////
	virtual bool Disconnect(int Serial) = 0;

////////////////////////////////////////////////////////////////////////////////////////////////////
//내부적으로 타이머 이벤트를 발생시킬 수 있는지 확인
////////////////////////////////////////////////////////////////////////////////////////////////////
	virtual bool CheckTimerImpl() {return false;} //default timer 사용
	virtual bool CreateTimerTask(unsigned int TimerID, unsigned int StartTime, unsigned int Period) {return false;} //타이머 생성

////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
	INetworkEngineCallback* GetCallback(){return m_Callback;}

protected:
	INetworkEngineCallback* m_Callback;

private:
};

typedef INetworkEngine* (CREATENETWORKENGINE)(bool Server, INetworkEngineCallback* pCallback);
extern "C" NETWORKENGINEDECL INetworkEngine* CreateNetworkEngine(bool Server, INetworkEngineCallback* pCallback);

#endif  // INETWORKENGINE_H_